apiVersion: v1
kind: Service
metadata:
  name: customer-service
  namespace: eventuate-tram-examples-customers-and-orders
spec:
  type: ClusterIP
  ports:
  - port: 8082
    targetPort: 8080
  selector:
    svc: customer-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-service
  namespace: eventuate-tram-examples-customers-and-orders
  labels:
    svc: customer-service
spec:
  selector:
    matchLabels:
      svc: customer-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        svc: customer-service
    spec:
      containers:
      - name: customer-service
        image: eventuateexamples/eventuate-tram-examples-customers-and-orders-customer-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: httpport
        env:
          - name: SPRING_DATASOURCE_URL
            valueFrom:
              configMapKeyRef:
                name: sql-config
                key: connection_string
          - name: SPRING_DATASOURCE_USERNAME
            valueFrom:
              configMapKeyRef:
                name: sql-config
                key: sql_user
          - name: SPRING_DATASOURCE_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: sql-config
                key: sql_password
          - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
            valueFrom:
              configMapKeyRef:
                name: sql-config
                key: sql_driver
          - name: EVENTUATELOCAL_KAFKA_BOOTSTRAP_SERVERS
            value: kafka-service:9092
          - name: EVENTUATELOCAL_ZOOKEEPER_CONNECTION_STRING
            value: zookeeper:2181
          - name: CDC_SERVICE_URL
            value: http://cdc-service:8080
          - name: SPRING_SLEUTH_ENABLED
            value: "true"
          - name: SPRING_SLEUTH_SAMPLER_PROBABILITY
            value: "1"
          - name: SPRING_ZIPKIN_BASE_URL
            value: http://zipkin:9411/
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          periodSeconds: 10
          failureThreshold: 25
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          periodSeconds: 10
          failureThreshold: 25
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: customer-service-ingress
  namespace: eventuate-tram-examples-customers-and-orders
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: customer-service
          servicePort: 8082
        path: /customers
---