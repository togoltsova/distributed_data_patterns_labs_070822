apiVersion: v1
kind: Service
metadata:
  name: kafka-service
  namespace: eventuate-tram-examples-customers-and-orders
  labels:
    name: kafka-service
spec:
  ports:
  - port: 9092
    targetPort: 9092
  type: LoadBalancer
  selector:
    role: kafka-service
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-service
  namespace: eventuate-tram-examples-customers-and-orders
spec:
  selector:
    matchLabels:
      role: kafka-service
  serviceName: "kafka-service"
  replicas: 1
  template:
    metadata:
      labels:
        role: kafka-service
    spec:
      terminationGracePeriodSeconds: 120
      containers:
        - name: kafka-service
          image: eventuateio/eventuate-kafka:${EVENTUATE_MESSAGING_KAFKA_IMAGE_VERSION?}
          imagePullPolicy: IfNotPresent
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka-service:9092
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          ports:
              - containerPort: 9092
          livenessProbe:
            exec:
              command:
              - echo
              - "EOF |"
              - "nc localhost 9092"
            periodSeconds: 10
            failureThreshold: 25
          readinessProbe:
            exec:
              command:
              - echo
              - "EOF |"
              - "nc localhost 9092"
            periodSeconds: 10
            failureThreshold: 25
          volumeMounts:
            - name: kafka-persistent-storage
              mountPath: /var/lib/zookeeper/data
  volumeClaimTemplates:
  - metadata:
      name: kafka-persistent-storage
      namespace: eventuate-tram-examples-customers-and-orders
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 256Mi
---
